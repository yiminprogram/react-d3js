{"version":3,"sources":["assets/weather.csv","views/List.tsx","views/Axis/Axis.tsx","views/Axis/index.ts","views/BarChart/BarChart.tsx","views/BarChart/index.ts","views/BarChartSort/BarChartSort.tsx","views/BarChartSort/index.ts","views/LineChart/LineChart.tsx","views/LineChart/index.ts","views/CSVChart/CSVChart.tsx","views/CSVChart/index.tsx","views/PieChart/PieChart.tsx","views/PieChart/index.ts","App.tsx","style/global.ts","index.tsx"],"names":["ListContainer","styled","ul","List","to","margin","chartWidth","chartHeight","data","Container","section","Axis","xAxisRef","useRef","yAxisRef","useEffect","x","scaleLinear","domain","extent","range","y","current","xAxisGroup","select","xAxis","axisBottom","tickPadding","call","yAxisGroup","yAxis","axisLeft","width","height","ref","transform","scaleBand","map","ele","product","paddingInner","paddingOuter","max","store","Group","g","BarChart","rectRef","selectAll","enter","append","attr","d","bandwidth","color","ButtonGroup","div","BarChartSort","useState","productsData","setProductsData","bar","transition","duration","exit","remove","Button","variant","size","onClick","value","sort","a","b","Math","random","LineChart","lineRef","lineGroup","svgLine","line","empty","datum","XAxisGroup","YAxisTempGroup","YAxisRainGroup","CSVChart","setData","yAxisTempRef","yAxisRainRef","temperatureRef","rainRef","csv","require","default","results","arr","i","time","Date","Number","temperature","rain","push","tempMax","rainMax","undefined","formatTime","timeFormat","yTemp","nice","yRain","tickFormat","toString","axisRight","d3_line","node","getTotalLength","PieChart","pieGroup","circleArc","arc","innerRadius","outerRadius","circlePie","pie","Header","header","RouteWrapper","Footer","footer","App","Home","fontSize","exact","path","component","style","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d41cb962.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/weather.2fe5c87c.csv\";","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nconst ListContainer = styled.ul`\n  padding: 2rem;\n\n  li {\n    margin-bottom: 2rem;\n\n    a {\n      font-size: 1.5rem;\n      font-weight: 700;\n    }\n  }\n`;\n\nconst List = () => {\n  return (\n    <div>\n      <ListContainer>\n        <li>\n          <Link to=\"/axis\">Axis</Link>\n        </li>\n        <li>\n          <Link to=\"/bar-chart\">Bar Chart</Link>\n        </li>\n        <li>\n          <Link to=\"/bar-chart-sort\">Bar Chart Sort</Link>\n        </li>\n        <li>\n          <Link to=\"/line-chart\">Link Chart</Link>\n        </li>\n        <li>\n          <Link to=\"/csv-chart\">CSV Chart</Link>\n        </li>\n        <li>\n          <Link to=\"/pie-chart\">Pie Chart</Link>\n        </li>\n      </ListContainer>\n    </div>\n  );\n};\n\nexport default List;\n","import React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { axisLeft, scaleLinear, select, axisBottom, extent } from 'd3';\n\nconst width = 1000;\nconst height = 800;\nconst margin = {\n  top: 50,\n  left: 50,\n  bottom: 50,\n  right: 50,\n};\nconst chartWidth = width - margin.left - margin.right;\nconst chartHeight = height - margin.top - margin.bottom;\n\nconst data = [1, 2, 3, 4, 5, 6];\n\nconst Container = styled.section`\n  padding: 2rem;\n`;\n\nconst Axis = () => {\n  const xAxisRef = useRef<SVGGElement | null>(null);\n  const yAxisRef = useRef<SVGGElement | null>(null);\n\n  useEffect(() => {\n    // x scale\n    const x = scaleLinear()\n      .domain(extent(data) as [number, number])\n      .range([0, chartWidth]);\n\n    // y scale\n    const y = scaleLinear()\n      .domain(extent(data) as [number, number])\n      .range([chartHeight, 0]);\n\n    // create x axis\n    if (xAxisRef.current) {\n      const xAxisGroup = select(xAxisRef.current);\n\n      const xAxis = axisBottom(x).tickPadding(10);\n\n      xAxisGroup.call(xAxis);\n    }\n\n    // create y axis\n    if (yAxisRef.current) {\n      const yAxisGroup = select(yAxisRef.current);\n\n      const yAxis = axisLeft(y).tickPadding(10);\n\n      yAxisGroup.call(yAxis);\n    }\n  }, []);\n\n  return (\n    <Container>\n      <svg width={width} height={height}>\n        <g ref={xAxisRef} transform={`translate(${margin.left},${margin.top + chartHeight})`}></g>\n        <g ref={yAxisRef} transform={`translate(${margin.left},${margin.top})`}></g>\n      </svg>\n    </Container>\n  );\n};\n\nexport default Axis;\n","import Axis from './Axis';\n\nexport default Axis;\n","import React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { scaleBand, axisLeft, scaleLinear, select, axisBottom, max } from 'd3';\nimport data from '../../assets/products.json';\n\nconst width = 1000;\nconst height = 800;\nconst margin = {\n  top: 50,\n  left: 50,\n  bottom: 50,\n  right: 50,\n};\nconst chartWidth = width - margin.left - margin.right;\nconst chartHeight = height - margin.top - margin.bottom;\n\n// x scale\nconst x = scaleBand()\n  .domain(data.map((ele) => ele.product))\n  .range([0, chartWidth])\n  .paddingInner(0.3)\n  .paddingOuter(0.3);\n\n// y scale\nconst y = scaleLinear()\n  .domain([0, max(data.map((ele) => ele.store)) as number])\n  .range([chartHeight, 0]);\n\n// style\nconst Container = styled.section`\n  padding: 2rem;\n`;\n\nconst Group = styled.g`\n  font-size: 1rem;\n`;\n\n// component\nconst BarChart = () => {\n  const xAxisRef = useRef<SVGGElement | null>(null);\n  const yAxisRef = useRef<SVGGElement | null>(null);\n  const rectRef = useRef<SVGGElement | null>(null);\n\n  useEffect(() => {\n    // create x axis\n    if (xAxisRef.current) {\n      const xAxisGroup = select(xAxisRef.current);\n\n      const xAxis = axisBottom(x).tickPadding(10);\n\n      xAxisGroup.call(xAxis);\n    }\n\n    // create y axis\n    if (yAxisRef.current) {\n      const yAxisGroup = select(yAxisRef.current);\n\n      const yAxis = axisLeft(y).tickPadding(10);\n\n      yAxisGroup.call(yAxis);\n    }\n\n    // create rect\n    if (rectRef.current) {\n      const rectGroup = select(rectRef.current);\n\n      const bar = rectGroup.selectAll('rect').data(data);\n\n      bar\n        .enter()\n        .append('rect')\n        .attr('x', (d) => x(d.product) as number)\n        .attr('y', (d) => y(d.store))\n        .attr('rx', 2)\n        .attr('width', x.bandwidth)\n        .attr('height', (d) => chartHeight - y(d.store))\n        .attr('fill', (d) => `${d.color}55`)\n        .attr('stroke', (d) => d.color)\n        .attr('stroke-width', 3);\n    }\n  }, []);\n\n  return (\n    <Container>\n      <svg width={width} height={height}>\n        <Group\n          ref={xAxisRef}\n          transform={`translate(${margin.left},${margin.top + chartHeight})`}\n        ></Group>\n        <Group ref={yAxisRef} transform={`translate(${margin.left},${margin.top})`}></Group>\n        <Group ref={rectRef} transform={`translate(${margin.left},${margin.top})`}></Group>\n      </svg>\n    </Container>\n  );\n};\n\nexport default BarChart;\n","import BarChart from './BarChart';\n\nexport default BarChart;\n","import React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { scaleBand, axisLeft, scaleLinear, select, axisBottom, max } from 'd3';\nimport data from '../../assets/products.json';\nimport { Button } from '@material-ui/core';\n\n// chart properties\nconst width = 1000;\nconst height = 800;\nconst margin = {\n  top: 50,\n  left: 50,\n  bottom: 50,\n  right: 50,\n};\nconst chartWidth = width - margin.left - margin.right;\nconst chartHeight = height - margin.top - margin.bottom;\n\n// style\nconst Container = styled.section`\n  padding: 2rem;\n`;\n\nconst ButtonGroup = styled.div`\n  button {\n    margin: 0 1rem;\n    text-transform: capitalize;\n  }\n`;\n\nconst Group = styled.g`\n  font-size: 1rem;\n`;\n\n// component\nconst BarChartSort = () => {\n  const xAxisRef = useRef<SVGGElement | null>(null);\n  const yAxisRef = useRef<SVGGElement | null>(null);\n  const rectRef = useRef<SVGGElement | null>(null);\n  const [productsData, setProductsData] = useState<TProduct[]>(data);\n\n  // x scale\n  const x = scaleBand()\n    .domain(productsData.map((d) => d.product))\n    .range([0, chartWidth])\n    .paddingInner(0.3)\n    .paddingOuter(0.3);\n\n  // y scale\n  const y = scaleLinear()\n    .domain([0, max(productsData.map((d) => d.store))!])\n    .range([chartHeight, 0]);\n\n  useEffect(() => {\n    if (xAxisRef.current) {\n      const xAxisGroup = select(xAxisRef.current);\n\n      const xAxis = axisBottom(x).tickPadding(10);\n\n      xAxisGroup.call(xAxis);\n    }\n\n    // create y axis\n    if (yAxisRef.current) {\n      const yAxisGroup = select(yAxisRef.current);\n\n      const yAxis = axisLeft(y).tickPadding(10);\n\n      yAxisGroup.call(yAxis);\n    }\n  }, [x, y]);\n\n  type TProduct = {\n    product: string;\n    color: string;\n    store: number;\n  };\n\n  useEffect(() => {\n    // render rect\n    if (rectRef.current) {\n      const rectGroup = select(rectRef.current);\n\n      // get all rect element, abd data bind\n      const bar = rectGroup\n        .selectAll<SVGRectElement, TProduct>('rect')\n        .data<TProduct>(productsData, (d) => d.product);\n\n      bar\n        .enter()\n        .append('rect')\n        .attr('x', (d) => x(d.product) as number)\n        .attr('y', chartHeight)\n        .attr('rx', 2)\n        .attr('width', x.bandwidth)\n        .attr('height', 0)\n        .transition()\n        .duration(1000)\n        .attr('height', (d) => chartHeight - y(d.store))\n        .attr('y', (d) => y(d.store))\n        .attr('fill', (d) => `${d.color}55`)\n        .attr('stroke', (d) => d.color)\n        .attr('stroke-width', 3);\n\n      bar\n        .transition()\n        .duration(1000)\n        .attr('x', (d) => x(d.product) as number)\n        .attr('y', (d) => y(d.store))\n        .attr('height', (d) => chartHeight - y(d.store));\n\n      bar.exit().remove();\n    }\n  }, [x, y, productsData]);\n\n  // function\n  const descendingData = () => {\n    const value = productsData.sort((a, b) => b.store - a.store);\n    setProductsData([...value]);\n  };\n\n  const ascendingData = () => {\n    const value = productsData.sort((a, b) => a.store - b.store);\n    setProductsData([...value]);\n  };\n\n  const randomData = () => {\n    const value = productsData.sort(() => Math.random() - 0.5);\n    setProductsData([...value]);\n  };\n\n  return (\n    <Container>\n      <ButtonGroup>\n        <Button variant=\"contained\" size=\"large\" color=\"primary\" onClick={descendingData}>\n          Descending Data\n        </Button>\n        <Button variant=\"contained\" size=\"large\" color=\"primary\" onClick={ascendingData}>\n          Ascending Data\n        </Button>\n        <Button variant=\"contained\" size=\"large\" color=\"primary\" onClick={randomData}>\n          Random Data\n        </Button>\n      </ButtonGroup>\n      <svg width={width} height={height}>\n        <Group\n          ref={xAxisRef}\n          transform={`translate(${margin.left},${margin.top + chartHeight})`}\n        ></Group>\n        <Group ref={yAxisRef} transform={`translate(${margin.left},${margin.top})`}></Group>\n        <Group ref={rectRef} transform={`translate(${margin.left},${margin.top})`}></Group>\n      </svg>\n    </Container>\n  );\n};\n\nexport default BarChartSort;\n","import BarChartSort from './BarChartSort';\n\nexport default BarChartSort;\n","import React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { line, axisLeft, scaleLinear, select, axisBottom, extent } from 'd3';\n\nconst width = 1000;\nconst height = 800;\nconst margin = {\n  top: 50,\n  left: 50,\n  bottom: 50,\n  right: 50,\n};\nconst chartWidth = width - margin.left - margin.right;\nconst chartHeight = height - margin.top - margin.bottom;\n\nconst data = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\nconst Container = styled.section`\n  padding: 2rem;\n`;\n\nconst LineChart = () => {\n  const xAxisRef = useRef<SVGGElement | null>(null);\n  const yAxisRef = useRef<SVGGElement | null>(null);\n  const lineRef = useRef<SVGGElement | null>(null);\n\n  useEffect(() => {\n    // x scale\n    const x = scaleLinear()\n      .domain(extent(data) as [number, number])\n      .range([0, chartWidth]);\n\n    // y scale\n    const y = scaleLinear()\n      .domain(extent(data) as [number, number])\n      .range([chartHeight, 0]);\n\n    // create x axis\n    if (xAxisRef.current) {\n      const xAxisGroup = select(xAxisRef.current);\n\n      const xAxis = axisBottom(x).tickPadding(10);\n\n      xAxisGroup.call(xAxis);\n    }\n\n    // create y axis\n    if (yAxisRef.current) {\n      const yAxisGroup = select(yAxisRef.current);\n\n      const yAxis = axisLeft(y).tickPadding(10);\n\n      yAxisGroup.call(yAxis);\n    }\n\n    if (lineRef.current) {\n      const lineGroup = select(lineRef.current);\n\n      const svgLine = line<number>()\n        .x((d) => x(d))\n        .y((d) => y(d));\n\n      if (lineGroup.select('path').empty()) {\n        lineGroup\n          .append('path')\n          .datum(data)\n          .attr('d', svgLine)\n          .attr('fill', 'none')\n          .attr('stroke', '#ccc')\n          .attr('stroke-width', 3);\n      }\n    }\n  }, []);\n\n  return (\n    <Container>\n      <svg width={width} height={height}>\n        <g ref={xAxisRef} transform={`translate(${margin.left},${margin.top + chartHeight})`}></g>\n        <g ref={yAxisRef} transform={`translate(${margin.left},${margin.top})`}></g>\n        <g ref={lineRef} transform={`translate(${margin.left},${margin.top})`}></g>\n      </svg>\n    </Container>\n  );\n};\n\nexport default LineChart;\n","import LineChart from './LineChart';\n\nexport default LineChart;\n","import React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport {\n  line,\n  scaleBand,\n  csv,\n  scaleLinear,\n  select,\n  axisBottom,\n  axisRight,\n  axisLeft,\n  timeFormat,\n  max,\n} from 'd3';\n\nconst width = 1100;\nconst height = 800;\nconst margin = {\n  top: 80,\n  right: 80,\n  bottom: 80,\n  left: 80,\n};\n\nconst chartWidth = width - margin.left - margin.right;\nconst chartHeight = height - margin.top - margin.bottom;\n\ntype TData = {\n  time: Date;\n  temperature: number;\n  rain: number;\n};\n\nconst Container = styled.section`\n  padding: 1rem;\n`;\n\nconst XAxisGroup = styled.g`\n  font-size: 0.8rem;\n`;\n\nconst YAxisTempGroup = styled.g`\n  color: #ffa200;\n  font-size: 1rem;\n`;\n\nconst YAxisRainGroup = styled.g`\n  color: #2196f3;\n  font-size: 1rem;\n`;\n\nconst LineChartCSV = () => {\n  // data\n  const [data, setData] = useState<TData[]>([]);\n  // ref\n  const xAxisRef = useRef<SVGGElement | null>(null);\n  const yAxisTempRef = useRef<SVGGElement | null>(null);\n  const yAxisRainRef = useRef<SVGGElement | null>(null);\n  const temperatureRef = useRef<SVGGElement | null>(null);\n  const rainRef = useRef<SVGGElement | null>(null);\n\n  useEffect(() => {\n    (async () => {\n      const results = await csv(require('../../assets/weather.csv').default);\n      const arr: TData[] = [];\n      for (let i = 1; i <= 12; i += 1) {\n        const value: TData = {\n          time: new Date(2020, Number(results[i]['觀測時間(month)']) - 1),\n          temperature: Number(results[i]['氣溫(℃)']),\n          rain: Number(results[i]['降水量(mm)']),\n        };\n        arr.push(value);\n      }\n      setData(arr);\n    })();\n  }, []);\n\n  useEffect(() => {\n    // max min\n    const tempMax = max(data.map((d) => d.temperature));\n    const rainMax = max(data.map((ele) => ele.rain));\n\n    if (tempMax !== undefined && rainMax !== undefined) {\n      // format\n      const formatTime = timeFormat('%B');\n\n      // scale\n      const x = scaleBand()\n        .domain(data.map((d) => formatTime(d.time)))\n        .range([0, chartWidth]);\n      const yTemp = scaleLinear().domain([0, tempMax]).range([chartHeight, 0]).nice();\n      const yRain = scaleLinear()\n        .domain([0, rainMax * 2])\n        .range([chartHeight, 0])\n        .nice();\n\n      // render x aixs\n      if (xAxisRef.current) {\n        const xAxisGroup = select(xAxisRef.current);\n        const xAxis = axisBottom(x).tickPadding(10);\n        xAxisGroup.call(xAxis);\n      }\n\n      // render y temperature axis\n      if (yAxisTempRef.current) {\n        const yAxisGroup = select(yAxisTempRef.current);\n        const yAxis = axisLeft(yTemp)\n          .tickPadding(10)\n          .tickFormat((d) => (d === yTemp.domain()[1] ? `${d}℃` : d.toString()));\n        yAxisGroup.call(yAxis);\n      }\n\n      // render y rain axis\n      if (yAxisRainRef.current) {\n        const yAxisGroup = select(yAxisRainRef.current);\n        const yAxis = axisRight(yRain)\n          .tickPadding(10)\n          .tickFormat((d) => (d === yRain.domain()[1] ? `${d}mm` : d.toString()));\n        yAxisGroup.call(yAxis);\n      }\n\n      // line\n      const d3_line = line<TData>()\n        .x((d) => (x(formatTime(d.time)) as number) + x.bandwidth() / 2)\n        .y((d) => yTemp(d.temperature));\n\n      const lineGroup = select(temperatureRef.current);\n      if (lineGroup.select('path').empty()) {\n        lineGroup\n          .append('path')\n          .datum(data)\n          .attr('d', d3_line)\n          .attr('stroke-dasharray', () =>\n            lineGroup.select<SVGPathElement>('path').node()!.getTotalLength(),\n          )\n          .attr(\n            'stroke-dashoffset',\n            lineGroup.select<SVGPathElement>('path').node()!.getTotalLength(),\n          )\n          .transition()\n          .duration(1000)\n          .attr('fill', 'none')\n          .attr('stroke', '#ffa200')\n          .attr('stroke-width', 2)\n          .attr('stroke-dashoffset', 0);\n      }\n\n      // rect\n      const rainGroup = select(rainRef.current);\n      const bar = rainGroup.selectAll('rect').data(data);\n\n      bar\n        .enter()\n        .append('rect')\n        .attr('x', (d) => (x(formatTime(d.time)) as number) + x.bandwidth() / 4)\n        .attr('y', chartHeight)\n        .attr('width', x.bandwidth() / 2)\n        .attr('height', 0)\n        .transition()\n        .duration(1000)\n        .attr('height', (d) => chartHeight - yRain(d.rain))\n        .attr('y', (d) => yRain(d.rain))\n        .attr('fill', '#2196f3');\n    }\n  }, [data]);\n\n  return (\n    <Container>\n      <svg width={width} height={height}>\n        <XAxisGroup\n          ref={xAxisRef}\n          transform={`translate(${margin.left},${margin.top + chartHeight})`}\n        ></XAxisGroup>\n        <YAxisTempGroup\n          ref={yAxisTempRef}\n          transform={`translate(${margin.left},${margin.top})`}\n        ></YAxisTempGroup>\n        <YAxisRainGroup\n          ref={yAxisRainRef}\n          transform={`translate(${chartWidth + margin.left},${margin.top})`}\n        ></YAxisRainGroup>\n        <g ref={temperatureRef} transform={`translate(${margin.left},${margin.top})`}></g>\n        <g ref={rainRef} transform={`translate(${margin.left},${margin.top})`}></g>\n      </svg>\n    </Container>\n  );\n};\n\nexport default LineChartCSV;\n","import CSVChart from './CSVChart';\n\nexport default CSVChart;\n","import React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { arc, pie, select, PieArcDatum } from 'd3';\n\nconst width = 600;\nconst height = 600;\nconst margin = {\n  top: 50,\n  left: 50,\n  right: 50,\n  bottom: 50,\n};\n\nconst data: TData[] = [\n  {\n    product: 'apple',\n    store: 10,\n    color: '#f44336',\n  },\n  {\n    product: 'orange',\n    store: 10,\n    color: '#ff9800',\n  },\n  {\n    product: 'banana',\n    store: 10,\n    color: '#fdd835',\n  },\n  {\n    product: 'lemon',\n    store: 10,\n    color: '#4caf50',\n  },\n  {\n    product: 'blueberry',\n    store: 10,\n    color: '#2196f3',\n  },\n  {\n    product: 'cherry',\n    store: 10,\n    color: '#3f51b5',\n  },\n  {\n    product: 'grape',\n    store: 10,\n    color: '#673ab7',\n  },\n];\n\ntype TData = {\n  product: string;\n  store: number;\n  color: string;\n};\n\nconst Container = styled.section`\n  padding: 2rem;\n`;\n\nconst PieChart = () => {\n  const pieGroup = useRef<SVGGElement | null>(null);\n\n  useEffect(() => {\n    // arc\n    const circleArc = arc<PieArcDatum<TData>>()\n      .innerRadius(0)\n      .outerRadius(width / 2 - margin.left);\n\n    // pie\n    const circlePie = pie<TData>().value((d) => d.store);\n\n    // create pie chart\n    const svg = select(pieGroup.current);\n\n    svg\n      .selectAll('path')\n      .data(circlePie(data))\n      .enter()\n      .append('path')\n      .attr('d', circleArc)\n      .attr('fill', (d) => d.data.color);\n  }, []);\n\n  return (\n    <Container>\n      <svg width={width} height={height}>\n        <g ref={pieGroup} transform={`translate(${width / 2},${height / 2})`}></g>\n      </svg>\n    </Container>\n  );\n};\n\nexport default PieChart;\n","import PieChart from './PieChart';\n\nexport default PieChart;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { Home } from '@material-ui/icons';\nimport List from './views/List';\nimport Axis from './views/Axis';\nimport BarChart from './views/BarChart';\nimport BarChartSort from './views/BarChartSort';\nimport LineChart from './views/LineChart';\nimport CSVChart from './views/CSVChart';\nimport PieChart from './views/PieChart';\n\nconst Header = styled.header`\n  height: 60px;\n  border-bottom: 1px solid #ccc;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst RouteWrapper = styled.section`\n  min-height: calc(100vh - 60px);\n`;\n\nconst Footer = styled.footer`\n  font-size: 0.8rem;\n  padding: 1rem;\n  text-align: center;\n\n  p {\n    margin-bottom: 0.5rem;\n  }\n`;\n\nconst App = () => {\n  return (\n    <>\n      <Header>\n        <Link to=\"/\">\n          <Home fontSize=\"large\" color=\"primary\" />\n        </Link>\n      </Header>\n      <RouteWrapper>\n        <Switch>\n          <Route exact path=\"/\" component={List} />\n          <Route path=\"/axis\" component={Axis} />\n          <Route path=\"/bar-chart\" component={BarChart} />\n          <Route path=\"/bar-chart-sort\" component={BarChartSort} />\n          <Route path=\"/line-chart\" component={LineChart} />\n          <Route path=\"/csv-chart\" component={CSVChart} />\n          <Route path=\"/pie-chart\" component={PieChart} />\n        </Switch>\n      </RouteWrapper>\n      <Footer>\n        <p>程式練習測試用，任何資料無任何商業行為</p>\n        <p>only from programming test, no commercial use</p>\n      </Footer>\n    </>\n  );\n};\n\nexport default App;\n","import { createGlobalStyle } from 'styled-components';\n\nconst style = createGlobalStyle`\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n  display: block;\n}\n\nbody {\n  line-height: 1;\n}\n\nol,\nul {\n  list-style: none;\n}\n\nblockquote,\nq {\n  quotes: none;\n}\n\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n  content: '';\n  content: none;\n}\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\n// =========================================\n\nhtml,\nbody {\n  color: #3f3f3f;\n  font-family: 'Noto Sans TC';\n}\n\n#app {\n  overflow: hidden;\n}\n\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\nbutton{\n  font-family:  'Noto Sans TC';\n}\n\n`;\n\nexport default style;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\nimport GlobalStyle from './style/global';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <GlobalStyle />\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}