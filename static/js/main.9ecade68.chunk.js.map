{"version":3,"sources":["assets/weather.csv","assets/finance-week.csv","assets/screenshot/axis.jpg","assets/screenshot/bar-chart.jpg","assets/screenshot/bar-chart-sort.jpg","assets/screenshot/line-chart.jpg","assets/screenshot/csv-chart.jpg","assets/screenshot/pie-chart.jpg","assets/screenshot/candlestick-chart.jpg","views/List.tsx","views/Axis/Axis.tsx","views/Axis/index.ts","views/BarChart/BarChart.tsx","views/BarChart/index.ts","views/BarChartSort/BarChartSort.tsx","views/BarChartSort/index.ts","views/LineChart/LineChart.tsx","views/LineChart/index.ts","views/CSVChart/CSVChart.tsx","views/CSVChart/index.tsx","views/PieChart/PieChart.tsx","views/PieChart/index.ts","views/CandleStickChart/CandleStickChart.tsx","views/CandleStickChart/index.ts","App.tsx","style/global.ts","index.tsx"],"names":["ListContainer","styled","ul","List","to","src","Axis","alt","BarChart","BarChartSort","LineChart","CSVChart","PieChart","CandleStickChart","margin","chartWidth","chartHeight","data","Container","section","xAxisRef","useRef","yAxisRef","useEffect","x","scaleLinear","domain","extent","range","y","current","xAxisGroup","select","xAxis","axisBottom","tickPadding","call","yAxisGroup","yAxis","axisLeft","width","height","ref","transform","scaleBand","map","ele","product","paddingInner","paddingOuter","max","store","Group","g","rectRef","selectAll","enter","append","attr","d","bandwidth","color","ButtonGroup","div","useState","productsData","setProductsData","bar","transition","duration","exit","remove","Button","variant","size","onClick","value","sort","a","b","Math","random","lineRef","lineGroup","svgLine","line","empty","datum","XAxisGroup","YAxisTempGroup","YAxisRainGroup","setData","yAxisTempRef","yAxisRainRef","temperatureRef","rainRef","csv","require","default","results","arr","i","time","Date","Number","temperature","rain","push","tempMax","rainMax","undefined","formatTime","timeFormat","yTemp","nice","yRain","tickFormat","toString","axisRight","d3_line","node","getTotalLength","pieGroup","circleArc","arc","innerRadius","outerRadius","circlePie","pie","SVG","svg","parseTime","timeParse","svgRef","blockRef","auxiliaryRef","eventWrapper","values","forEach","Open","date","open","close","Close","high","High","low","Low","length","yMax","yMin","min","event","auxiliary","verticleLine","horizontalLine","on","e","pointer","text","invert","toFixed","fill","Header","header","RouteWrapper","Footer","footer","App","Home","fontSize","exact","path","component","style","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ecade68.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/weather.2fe5c87c.csv\";","export default __webpack_public_path__ + \"static/media/finance-week.574c7f5c.csv\";","export default __webpack_public_path__ + \"static/media/axis.49f53675.jpg\";","export default __webpack_public_path__ + \"static/media/bar-chart.cf18e6e8.jpg\";","export default __webpack_public_path__ + \"static/media/bar-chart-sort.fe5e97f3.jpg\";","export default __webpack_public_path__ + \"static/media/line-chart.bb605b5e.jpg\";","export default __webpack_public_path__ + \"static/media/csv-chart.8c6d0089.jpg\";","export default __webpack_public_path__ + \"static/media/pie-chart.2f66251a.jpg\";","export default __webpack_public_path__ + \"static/media/candlestick-chart.a69fe347.jpg\";","import React from 'react';\nimport styled from 'styled-components';\nimport { Link } from 'react-router-dom';\nimport Axis from '../assets/screenshot/axis.jpg';\nimport BarChart from '../assets/screenshot/bar-chart.jpg';\nimport BarChartSort from '../assets/screenshot/bar-chart-sort.jpg';\nimport LineChart from '../assets/screenshot/line-chart.jpg';\nimport CSVChart from '../assets/screenshot/csv-chart.jpg';\nimport PieChart from '../assets/screenshot/pie-chart.jpg';\nimport CandleStickChart from '../assets/screenshot/candlestick-chart.jpg';\n\nconst ListContainer = styled.ul`\n  padding: 2rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-flow: row wrap;\n  max-width: 1400px;\n  margin: 0 auto;\n\n  li {\n    flex: 0 1 300px;\n    margin: 1.5rem 1rem;\n    border-radius: 4px;\n    border: 1px solid #e0e0e0;\n    padding: 1rem;\n  }\n\n  a {\n    width: 100%;\n    height: 100%;\n    display: inline-block;\n    font-size: 1.5rem;\n    font-weight: 700;\n    text-decoration: none;\n  }\n\n  img {\n    width: 100%;\n    height: 200px;\n    object-fit: contain;\n    margin-bottom: 1rem;\n  }\n\n  h3 {\n    text-align: center;\n    margin-bottom: 0.5rem;\n  }\n`;\n\nconst List = () => {\n  return (\n    <div>\n      <ListContainer>\n        <li>\n          <Link to=\"/axis\">\n            <img src={Axis} alt=\"screenshot\" />\n            <h3>Axis</h3>\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/bar-chart\">\n            <img src={BarChart} alt=\"screenshot\" />\n            <h3>Bar Chart</h3>\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/bar-chart-sort\">\n            <img src={BarChartSort} alt=\"screenshot\" />\n            <h3>Bar Chart Sort</h3>\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/line-chart\">\n            <img src={LineChart} alt=\"screenshot\" />\n            <h3>Line Chart</h3>\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/csv-chart\">\n            <img src={CSVChart} alt=\"screenshot\" />\n            <h3>CSV Chart</h3>\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/pie-chart\">\n            <img src={PieChart} alt=\"screenshot\" />\n            <h3>Pie Chart</h3>\n          </Link>\n        </li>\n        <li>\n          <Link to=\"/candlestick-chart\">\n            <img src={CandleStickChart} alt=\"screenshot\" />\n            <h3>Candlestick Chart</h3>\n          </Link>\n        </li>\n      </ListContainer>\n    </div>\n  );\n};\n\nexport default List;\n","import React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { axisLeft, scaleLinear, select, axisBottom, extent } from 'd3';\n\nconst width = 1000;\nconst height = 800;\nconst margin = {\n  top: 50,\n  left: 50,\n  bottom: 50,\n  right: 50,\n};\nconst chartWidth = width - margin.left - margin.right;\nconst chartHeight = height - margin.top - margin.bottom;\n\nconst data = [1, 2, 3, 4, 5, 6];\n\nconst Container = styled.section`\n  padding: 2rem;\n`;\n\nconst Axis = () => {\n  const xAxisRef = useRef<SVGGElement | null>(null);\n  const yAxisRef = useRef<SVGGElement | null>(null);\n\n  useEffect(() => {\n    // x scale\n    const x = scaleLinear()\n      .domain(extent(data) as [number, number])\n      .range([0, chartWidth]);\n\n    // y scale\n    const y = scaleLinear()\n      .domain(extent(data) as [number, number])\n      .range([chartHeight, 0]);\n\n    // create x axis\n    if (xAxisRef.current) {\n      const xAxisGroup = select(xAxisRef.current);\n\n      const xAxis = axisBottom(x).tickPadding(10);\n\n      xAxisGroup.call(xAxis);\n    }\n\n    // create y axis\n    if (yAxisRef.current) {\n      const yAxisGroup = select(yAxisRef.current);\n\n      const yAxis = axisLeft(y).tickPadding(10);\n\n      yAxisGroup.call(yAxis);\n    }\n  }, []);\n\n  return (\n    <Container>\n      <svg width={width} height={height}>\n        <g ref={xAxisRef} transform={`translate(${margin.left},${margin.top + chartHeight})`}></g>\n        <g ref={yAxisRef} transform={`translate(${margin.left},${margin.top})`}></g>\n      </svg>\n    </Container>\n  );\n};\n\nexport default Axis;\n","import Axis from './Axis';\n\nexport default Axis;\n","import React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { scaleBand, axisLeft, scaleLinear, select, axisBottom, max } from 'd3';\nimport data from '../../assets/products.json';\n\nconst width = 1000;\nconst height = 800;\nconst margin = {\n  top: 50,\n  left: 50,\n  bottom: 50,\n  right: 50,\n};\nconst chartWidth = width - margin.left - margin.right;\nconst chartHeight = height - margin.top - margin.bottom;\n\n// x scale\nconst x = scaleBand()\n  .domain(data.map((ele) => ele.product))\n  .range([0, chartWidth])\n  .paddingInner(0.3)\n  .paddingOuter(0.3);\n\n// y scale\nconst y = scaleLinear()\n  .domain([0, max(data.map((ele) => ele.store)) as number])\n  .range([chartHeight, 0]);\n\n// style\nconst Container = styled.section`\n  padding: 2rem;\n`;\n\nconst Group = styled.g`\n  font-size: 1rem;\n`;\n\n// component\nconst BarChart = () => {\n  const xAxisRef = useRef<SVGGElement | null>(null);\n  const yAxisRef = useRef<SVGGElement | null>(null);\n  const rectRef = useRef<SVGGElement | null>(null);\n\n  useEffect(() => {\n    // create x axis\n    if (xAxisRef.current) {\n      const xAxisGroup = select(xAxisRef.current);\n\n      const xAxis = axisBottom(x).tickPadding(10);\n\n      xAxisGroup.call(xAxis);\n    }\n\n    // create y axis\n    if (yAxisRef.current) {\n      const yAxisGroup = select(yAxisRef.current);\n\n      const yAxis = axisLeft(y).tickPadding(10);\n\n      yAxisGroup.call(yAxis);\n    }\n\n    // create rect\n    if (rectRef.current) {\n      const rectGroup = select(rectRef.current);\n\n      const bar = rectGroup.selectAll('rect').data(data);\n\n      bar\n        .enter()\n        .append('rect')\n        .attr('x', (d) => x(d.product) as number)\n        .attr('y', (d) => y(d.store))\n        .attr('rx', 2)\n        .attr('width', x.bandwidth)\n        .attr('height', (d) => chartHeight - y(d.store))\n        .attr('fill', (d) => `${d.color}55`)\n        .attr('stroke', (d) => d.color)\n        .attr('stroke-width', 3);\n    }\n  }, []);\n\n  return (\n    <Container>\n      <svg width={width} height={height}>\n        <Group\n          ref={xAxisRef}\n          transform={`translate(${margin.left},${margin.top + chartHeight})`}\n        ></Group>\n        <Group ref={yAxisRef} transform={`translate(${margin.left},${margin.top})`}></Group>\n        <Group ref={rectRef} transform={`translate(${margin.left},${margin.top})`}></Group>\n      </svg>\n    </Container>\n  );\n};\n\nexport default BarChart;\n","import BarChart from './BarChart';\n\nexport default BarChart;\n","import React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport { scaleBand, axisLeft, scaleLinear, select, axisBottom, max } from 'd3';\nimport data from '../../assets/products.json';\nimport { Button } from '@material-ui/core';\n\n// chart properties\nconst width = 1000;\nconst height = 800;\nconst margin = {\n  top: 50,\n  left: 50,\n  bottom: 50,\n  right: 50,\n};\nconst chartWidth = width - margin.left - margin.right;\nconst chartHeight = height - margin.top - margin.bottom;\n\n// style\nconst Container = styled.section`\n  padding: 2rem;\n`;\n\nconst ButtonGroup = styled.div`\n  button {\n    margin: 0 1rem;\n    text-transform: capitalize;\n  }\n`;\n\nconst Group = styled.g`\n  font-size: 1rem;\n`;\n\n// component\nconst BarChartSort = () => {\n  const xAxisRef = useRef<SVGGElement | null>(null);\n  const yAxisRef = useRef<SVGGElement | null>(null);\n  const rectRef = useRef<SVGGElement | null>(null);\n  const [productsData, setProductsData] = useState<TProduct[]>(data);\n\n  // x scale\n  const x = scaleBand()\n    .domain(productsData.map((d) => d.product))\n    .range([0, chartWidth])\n    .paddingInner(0.3)\n    .paddingOuter(0.3);\n\n  // y scale\n  const y = scaleLinear()\n    .domain([0, max(productsData.map((d) => d.store))!])\n    .range([chartHeight, 0]);\n\n  useEffect(() => {\n    if (xAxisRef.current) {\n      const xAxisGroup = select(xAxisRef.current);\n\n      const xAxis = axisBottom(x).tickPadding(10);\n\n      xAxisGroup.call(xAxis);\n    }\n\n    // create y axis\n    if (yAxisRef.current) {\n      const yAxisGroup = select(yAxisRef.current);\n\n      const yAxis = axisLeft(y).tickPadding(10);\n\n      yAxisGroup.call(yAxis);\n    }\n  }, [x, y]);\n\n  type TProduct = {\n    product: string;\n    color: string;\n    store: number;\n  };\n\n  useEffect(() => {\n    // render rect\n    if (rectRef.current) {\n      const rectGroup = select(rectRef.current);\n\n      // get all rect element, abd data bind\n      const bar = rectGroup\n        .selectAll<SVGRectElement, TProduct>('rect')\n        .data<TProduct>(productsData, (d) => d.product);\n\n      bar\n        .enter()\n        .append('rect')\n        .attr('x', (d) => x(d.product) as number)\n        .attr('y', chartHeight)\n        .attr('rx', 2)\n        .attr('width', x.bandwidth)\n        .attr('height', 0)\n        .transition()\n        .duration(1000)\n        .attr('height', (d) => chartHeight - y(d.store))\n        .attr('y', (d) => y(d.store))\n        .attr('fill', (d) => `${d.color}55`)\n        .attr('stroke', (d) => d.color)\n        .attr('stroke-width', 3);\n\n      bar\n        .transition()\n        .duration(1000)\n        .attr('x', (d) => x(d.product) as number)\n        .attr('y', (d) => y(d.store))\n        .attr('height', (d) => chartHeight - y(d.store));\n\n      bar.exit().remove();\n    }\n  }, [x, y, productsData]);\n\n  // function\n  const descendingData = () => {\n    const value = productsData.sort((a, b) => b.store - a.store);\n    setProductsData([...value]);\n  };\n\n  const ascendingData = () => {\n    const value = productsData.sort((a, b) => a.store - b.store);\n    setProductsData([...value]);\n  };\n\n  const randomData = () => {\n    const value = productsData.sort(() => Math.random() - 0.5);\n    setProductsData([...value]);\n  };\n\n  return (\n    <Container>\n      <ButtonGroup>\n        <Button variant=\"contained\" size=\"large\" color=\"primary\" onClick={descendingData}>\n          Descending Data\n        </Button>\n        <Button variant=\"contained\" size=\"large\" color=\"primary\" onClick={ascendingData}>\n          Ascending Data\n        </Button>\n        <Button variant=\"contained\" size=\"large\" color=\"primary\" onClick={randomData}>\n          Random Data\n        </Button>\n      </ButtonGroup>\n      <svg width={width} height={height}>\n        <Group\n          ref={xAxisRef}\n          transform={`translate(${margin.left},${margin.top + chartHeight})`}\n        ></Group>\n        <Group ref={yAxisRef} transform={`translate(${margin.left},${margin.top})`}></Group>\n        <Group ref={rectRef} transform={`translate(${margin.left},${margin.top})`}></Group>\n      </svg>\n    </Container>\n  );\n};\n\nexport default BarChartSort;\n","import BarChartSort from './BarChartSort';\n\nexport default BarChartSort;\n","import React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { line, axisLeft, scaleLinear, select, axisBottom, extent } from 'd3';\n\nconst width = 1000;\nconst height = 800;\nconst margin = {\n  top: 50,\n  left: 50,\n  bottom: 50,\n  right: 50,\n};\nconst chartWidth = width - margin.left - margin.right;\nconst chartHeight = height - margin.top - margin.bottom;\n\nconst data = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n\nconst Container = styled.section`\n  padding: 2rem;\n`;\n\nconst LineChart = () => {\n  const xAxisRef = useRef<SVGGElement | null>(null);\n  const yAxisRef = useRef<SVGGElement | null>(null);\n  const lineRef = useRef<SVGGElement | null>(null);\n\n  useEffect(() => {\n    // x scale\n    const x = scaleLinear()\n      .domain(extent(data) as [number, number])\n      .range([0, chartWidth]);\n\n    // y scale\n    const y = scaleLinear()\n      .domain(extent(data) as [number, number])\n      .range([chartHeight, 0]);\n\n    // create x axis\n    if (xAxisRef.current) {\n      const xAxisGroup = select(xAxisRef.current);\n\n      const xAxis = axisBottom(x).tickPadding(10);\n\n      xAxisGroup.call(xAxis);\n    }\n\n    // create y axis\n    if (yAxisRef.current) {\n      const yAxisGroup = select(yAxisRef.current);\n\n      const yAxis = axisLeft(y).tickPadding(10);\n\n      yAxisGroup.call(yAxis);\n    }\n\n    if (lineRef.current) {\n      const lineGroup = select(lineRef.current);\n\n      const svgLine = line<number>()\n        .x((d) => x(d))\n        .y((d) => y(d));\n\n      if (lineGroup.select('path').empty()) {\n        lineGroup\n          .append('path')\n          .datum(data)\n          .attr('d', svgLine)\n          .attr('fill', 'none')\n          .attr('stroke', '#ccc')\n          .attr('stroke-width', 3);\n      }\n    }\n  }, []);\n\n  return (\n    <Container>\n      <svg width={width} height={height}>\n        <g ref={xAxisRef} transform={`translate(${margin.left},${margin.top + chartHeight})`}></g>\n        <g ref={yAxisRef} transform={`translate(${margin.left},${margin.top})`}></g>\n        <g ref={lineRef} transform={`translate(${margin.left},${margin.top})`}></g>\n      </svg>\n    </Container>\n  );\n};\n\nexport default LineChart;\n","import LineChart from './LineChart';\n\nexport default LineChart;\n","import React, { useEffect, useRef, useState } from 'react';\nimport styled from 'styled-components';\nimport {\n  line,\n  scaleBand,\n  csv,\n  scaleLinear,\n  select,\n  axisBottom,\n  axisRight,\n  axisLeft,\n  timeFormat,\n  max,\n} from 'd3';\n\nconst width = 1100;\nconst height = 800;\nconst margin = {\n  top: 80,\n  right: 80,\n  bottom: 80,\n  left: 80,\n};\n\nconst chartWidth = width - margin.left - margin.right;\nconst chartHeight = height - margin.top - margin.bottom;\n\ntype TData = {\n  time: Date;\n  temperature: number;\n  rain: number;\n};\n\nconst Container = styled.section`\n  padding: 1rem;\n`;\n\nconst XAxisGroup = styled.g`\n  font-size: 0.8rem;\n`;\n\nconst YAxisTempGroup = styled.g`\n  color: #ffa200;\n  font-size: 1rem;\n`;\n\nconst YAxisRainGroup = styled.g`\n  color: #2196f3;\n  font-size: 1rem;\n`;\n\nconst LineChartCSV = () => {\n  // data\n  const [data, setData] = useState<TData[]>([]);\n  // ref\n  const xAxisRef = useRef<SVGGElement | null>(null);\n  const yAxisTempRef = useRef<SVGGElement | null>(null);\n  const yAxisRainRef = useRef<SVGGElement | null>(null);\n  const temperatureRef = useRef<SVGGElement | null>(null);\n  const rainRef = useRef<SVGGElement | null>(null);\n\n  useEffect(() => {\n    (async () => {\n      const results = await csv(require('../../assets/weather.csv').default);\n      const arr: TData[] = [];\n      for (let i = 1; i <= 12; i += 1) {\n        const value: TData = {\n          time: new Date(2020, Number(results[i]['觀測時間(month)']) - 1),\n          temperature: Number(results[i]['氣溫(℃)']),\n          rain: Number(results[i]['降水量(mm)']),\n        };\n        arr.push(value);\n      }\n      setData(arr);\n    })();\n  }, []);\n\n  useEffect(() => {\n    // max min\n    const tempMax = max(data.map((d) => d.temperature));\n    const rainMax = max(data.map((ele) => ele.rain));\n\n    if (tempMax !== undefined && rainMax !== undefined) {\n      // format\n      const formatTime = timeFormat('%B');\n\n      // scale\n      const x = scaleBand()\n        .domain(data.map((d) => formatTime(d.time)))\n        .range([0, chartWidth]);\n      const yTemp = scaleLinear().domain([0, tempMax]).range([chartHeight, 0]).nice();\n      const yRain = scaleLinear()\n        .domain([0, rainMax * 2])\n        .range([chartHeight, 0])\n        .nice();\n\n      // render x aixs\n      if (xAxisRef.current) {\n        const xAxisGroup = select(xAxisRef.current);\n        const xAxis = axisBottom(x).tickPadding(10);\n        xAxisGroup.call(xAxis);\n      }\n\n      // render y temperature axis\n      if (yAxisTempRef.current) {\n        const yAxisGroup = select(yAxisTempRef.current);\n        const yAxis = axisLeft(yTemp)\n          .tickPadding(10)\n          .tickFormat((d) => (d === yTemp.domain()[1] ? `${d}℃` : d.toString()));\n        yAxisGroup.call(yAxis);\n      }\n\n      // render y rain axis\n      if (yAxisRainRef.current) {\n        const yAxisGroup = select(yAxisRainRef.current);\n        const yAxis = axisRight(yRain)\n          .tickPadding(10)\n          .tickFormat((d) => (d === yRain.domain()[1] ? `${d}mm` : d.toString()));\n        yAxisGroup.call(yAxis);\n      }\n\n      // line\n      const d3_line = line<TData>()\n        .x((d) => (x(formatTime(d.time)) as number) + x.bandwidth() / 2)\n        .y((d) => yTemp(d.temperature));\n\n      const lineGroup = select(temperatureRef.current);\n      if (lineGroup.select('path').empty()) {\n        lineGroup\n          .append('path')\n          .datum(data)\n          .attr('d', d3_line)\n          .attr('stroke-dasharray', () =>\n            lineGroup.select<SVGPathElement>('path').node()!.getTotalLength(),\n          )\n          .attr(\n            'stroke-dashoffset',\n            lineGroup.select<SVGPathElement>('path').node()!.getTotalLength(),\n          )\n          .transition()\n          .duration(1000)\n          .attr('fill', 'none')\n          .attr('stroke', '#ffa200')\n          .attr('stroke-width', 2)\n          .attr('stroke-dashoffset', 0);\n      }\n\n      // rect\n      const rainGroup = select(rainRef.current);\n      const bar = rainGroup.selectAll('rect').data(data);\n\n      bar\n        .enter()\n        .append('rect')\n        .attr('x', (d) => (x(formatTime(d.time)) as number) + x.bandwidth() / 4)\n        .attr('y', chartHeight)\n        .attr('width', x.bandwidth() / 2)\n        .attr('height', 0)\n        .transition()\n        .duration(1000)\n        .attr('height', (d) => chartHeight - yRain(d.rain))\n        .attr('y', (d) => yRain(d.rain))\n        .attr('fill', '#2196f3');\n    }\n  }, [data]);\n\n  return (\n    <Container>\n      <svg width={width} height={height}>\n        <XAxisGroup\n          ref={xAxisRef}\n          transform={`translate(${margin.left},${margin.top + chartHeight})`}\n        ></XAxisGroup>\n        <YAxisTempGroup\n          ref={yAxisTempRef}\n          transform={`translate(${margin.left},${margin.top})`}\n        ></YAxisTempGroup>\n        <YAxisRainGroup\n          ref={yAxisRainRef}\n          transform={`translate(${chartWidth + margin.left},${margin.top})`}\n        ></YAxisRainGroup>\n        <g ref={temperatureRef} transform={`translate(${margin.left},${margin.top})`}></g>\n        <g ref={rainRef} transform={`translate(${margin.left},${margin.top})`}></g>\n      </svg>\n    </Container>\n  );\n};\n\nexport default LineChartCSV;\n","import CSVChart from './CSVChart';\n\nexport default CSVChart;\n","import React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\nimport { arc, pie, select, PieArcDatum } from 'd3';\n\nconst width = 600;\nconst height = 600;\nconst margin = {\n  top: 50,\n  left: 50,\n  right: 50,\n  bottom: 50,\n};\n\nconst data: TData[] = [\n  {\n    product: 'apple',\n    store: 10,\n    color: '#f44336',\n  },\n  {\n    product: 'orange',\n    store: 10,\n    color: '#ff9800',\n  },\n  {\n    product: 'banana',\n    store: 10,\n    color: '#fdd835',\n  },\n  {\n    product: 'lemon',\n    store: 10,\n    color: '#4caf50',\n  },\n  {\n    product: 'blueberry',\n    store: 10,\n    color: '#2196f3',\n  },\n  {\n    product: 'cherry',\n    store: 10,\n    color: '#3f51b5',\n  },\n  {\n    product: 'grape',\n    store: 10,\n    color: '#673ab7',\n  },\n];\n\ntype TData = {\n  product: string;\n  store: number;\n  color: string;\n};\n\nconst Container = styled.section`\n  padding: 2rem;\n`;\n\nconst PieChart = () => {\n  const pieGroup = useRef<SVGGElement | null>(null);\n\n  useEffect(() => {\n    // arc\n    const circleArc = arc<PieArcDatum<TData>>()\n      .innerRadius(0)\n      .outerRadius(width / 2 - margin.left);\n\n    // pie\n    const circlePie = pie<TData>().value((d) => d.store);\n\n    // create pie chart\n    const svg = select(pieGroup.current);\n\n    svg\n      .selectAll('path')\n      .data(circlePie(data))\n      .enter()\n      .append('path')\n      .attr('d', circleArc)\n      .attr('fill', (d) => d.data.color);\n  }, []);\n\n  return (\n    <Container>\n      <svg width={width} height={height}>\n        <g ref={pieGroup} transform={`translate(${width / 2},${height / 2})`}></g>\n      </svg>\n    </Container>\n  );\n};\n\nexport default PieChart;\n","import PieChart from './PieChart';\n\nexport default PieChart;\n","import React, { useRef, useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport {\n  select,\n  axisBottom,\n  axisRight,\n  csv,\n  timeParse,\n  timeFormat,\n  max,\n  min,\n  scaleBand,\n  scaleLinear,\n  pointer,\n} from 'd3';\n\nconst width = 1500;\nconst height = 800;\nconst margin = {\n  top: 80,\n  right: 80,\n  bottom: 80,\n  left: 80,\n};\n\nconst chartWidth = width - margin.left - margin.right;\nconst chartHeight = height - margin.top - margin.bottom;\n\nconst Container = styled.section`\n  padding: 2rem;\n`;\n\nconst SVG = styled.svg`\n  g {\n    font-size: 1rem;\n  }\n`;\n\ntype TData = {\n  date: Date;\n  open: number;\n  close: number;\n  high: number;\n  low: number;\n};\n\n// format time\nconst parseTime = timeParse('%Y-%m-%d');\nconst formatTime = timeFormat('%m/%d');\n\nconst CandleStickChart = () => {\n  const svgRef = useRef<SVGSVGElement | null>(null);\n  const xAxisRef = useRef<SVGGElement | null>(null);\n  const yAxisRef = useRef<SVGGElement | null>(null);\n  const lineRef = useRef<SVGGElement | null>(null);\n  const blockRef = useRef<SVGGElement | null>(null);\n  const auxiliaryRef = useRef<SVGGElement | null>(null);\n  const eventWrapper = useRef<SVGRectElement | null>(null);\n\n  const [data, setData] = useState<TData[]>([]);\n\n  useEffect(() => {\n    (async () => {\n      const results = await csv(require('../../assets/finance-week.csv').default);\n\n      const values: TData[] = [];\n\n      results.forEach((ele) => {\n        if (ele.Open) {\n          values.push({\n            date: parseTime(ele.Date!)!,\n            open: Number(ele.Open),\n            close: Number(ele.Close!),\n            high: Number(ele.High!),\n            low: Number(ele.Low!),\n          });\n        }\n      });\n\n      setData(values);\n    })();\n  }, []);\n\n  useEffect(() => {\n    if (data.length === 0) return;\n\n    // y axis max,min\n    const yMax = (max(data.map((d) => d.high)) as number) + 5;\n    const yMin = (min(data.map((d) => d.low)) as number) - 5;\n\n    // x scale\n    const x = scaleBand()\n      .domain(data.map((d) => formatTime(d.date)))\n      .range([0, chartWidth]);\n\n    // y scale\n    const y = scaleLinear().domain([yMin, yMax]).range([chartHeight, 0]).nice();\n\n    // render x axis\n    if (xAxisRef.current) {\n      const xAxisGroup = select(xAxisRef.current);\n      const xAxis = axisBottom(x).tickPadding(10);\n      xAxisGroup.call(xAxis);\n    }\n\n    //render y axis\n    if (yAxisRef.current) {\n      const yAxisGroup = select(yAxisRef.current);\n      const yAxis = axisRight(y).tickPadding(10);\n      yAxisGroup.call(yAxis);\n    }\n\n    // render line\n    if (lineRef.current) {\n      const lineGroup = select(lineRef.current);\n      const line = lineGroup.selectAll('line').data(data);\n\n      line\n        .enter()\n        .append('line')\n        .attr('x1', (d) => (x(formatTime(d.date)) as number) + x.bandwidth() / 2)\n        .attr('x2', (d) => (x(formatTime(d.date)) as number) + x.bandwidth() / 2)\n        .attr('y1', (d) => y(d.high))\n        .attr('y2', (d) => y(d.low))\n        .attr('stroke', (d) =>\n          d.open === d.close ? '#666' : d.open > d.close ? '#198754' : '#dc3545',\n        )\n        .attr('stroke-width', 2);\n    }\n\n    // render block\n    if (blockRef.current) {\n      const blockGroup = select(blockRef.current);\n      const block = blockGroup.selectAll('line').data(data);\n\n      block\n        .enter()\n        .append('line')\n        .attr('x1', (d) =>\n          d.close === d.open\n            ? (x(formatTime(d.date)) as number) + x.bandwidth() / 2 - 20\n            : (x(formatTime(d.date)) as number) + x.bandwidth() / 2,\n        )\n        .attr('x2', (d) =>\n          d.close === d.open\n            ? (x(formatTime(d.date)) as number) + x.bandwidth() / 2 + 20\n            : (x(formatTime(d.date)) as number) + x.bandwidth() / 2,\n        )\n        .attr('y1', (d) =>\n          d.close === d.open\n            ? y(d.low) + (y(d.high) - y(d.low)) / 2\n            : d.close > d.open\n            ? y(d.close)\n            : y(d.open),\n        )\n        .attr('y2', (d) =>\n          d.close === d.open\n            ? y(d.low) + (y(d.high) - y(d.low)) / 2\n            : d.close > d.open\n            ? y(d.open)\n            : y(d.close),\n        )\n        .attr('stroke', (d) =>\n          d.open === d.close ? '#666' : d.open > d.close ? '#198754' : '#dc3545',\n        )\n        .attr('stroke-width', (d) => (d.close === d.open ? 2 : 20));\n    }\n\n    // render auxiliary line\n    if (auxiliaryRef.current) {\n      const event = select(eventWrapper.current);\n      const auxiliary = select(auxiliaryRef.current);\n\n      auxiliary\n        .append('line')\n        .attr('id', 'verticle_line')\n        .attr('y1', 0)\n        .attr('y2', chartHeight)\n        .attr('stroke', 'transparent')\n        .attr('stroke-width', 2)\n        .attr('stroke-dasharray', 10);\n\n      auxiliary\n        .append('line')\n        .attr('id', 'horizontal_line')\n        .attr('x1', 0)\n        .attr('x2', chartWidth)\n        .attr('stroke', 'transparent')\n        .attr('stroke-width', 2)\n        .attr('stroke-dasharray', 10);\n\n      auxiliary.append('text').attr('id', 'value').attr('fill', 'transparent');\n\n      const verticleLine = select('#verticle_line');\n      const horizontalLine = select('#horizontal_line');\n      const value = select('#value');\n\n      event\n        .on('mousemove touchmove', (e) => {\n          verticleLine.attr('x1', pointer(e)[0]).attr('x2', pointer(e)[0]).attr('stroke', '#aaa');\n          horizontalLine.attr('y1', pointer(e)[1]).attr('y2', pointer(e)[1]).attr('stroke', '#aaa');\n          value\n            .attr('x', -55)\n            .attr('y', pointer(e)[1] + 5)\n            .attr('fill', '#333')\n            .text(y.invert(pointer(e)[1]).toFixed(2));\n        })\n        .on('mouseleave touchend', () => {\n          verticleLine.attr('stroke', 'transparent');\n          horizontalLine.attr('stroke', 'transparent');\n        });\n    }\n  }, [data]);\n\n  return (\n    <Container>\n      <SVG ref={svgRef} width={width} height={height}>\n        <g ref={xAxisRef} transform={`translate(${margin.left},${margin.top + chartHeight})`}></g>\n        <g ref={yAxisRef} transform={`translate(${margin.left + chartWidth},${margin.top})`}></g>\n        <g ref={lineRef} transform={`translate(${margin.left},${margin.top})`}></g>\n        <g ref={blockRef} transform={`translate(${margin.left},${margin.top})`}></g>\n        <g ref={auxiliaryRef} transform={`translate(${margin.left},${margin.top})`}></g>\n        <rect\n          ref={eventWrapper}\n          transform={`translate(${margin.left},${margin.top})`}\n          width={chartWidth}\n          height={chartHeight}\n          fill=\"transparent\"\n        ></rect>\n      </SVG>\n    </Container>\n  );\n};\n\nexport default CandleStickChart;\n","import CandleStickChart from './CandleStickChart';\n\nexport default CandleStickChart;\n","import React from 'react';\nimport styled from 'styled-components';\nimport { Link, Route, Switch } from 'react-router-dom';\nimport { Home } from '@material-ui/icons';\nimport List from './views/List';\nimport Axis from './views/Axis';\nimport BarChart from './views/BarChart';\nimport BarChartSort from './views/BarChartSort';\nimport LineChart from './views/LineChart';\nimport CSVChart from './views/CSVChart';\nimport PieChart from './views/PieChart';\nimport CandleStickChart from './views/CandleStickChart';\n\nconst Header = styled.header`\n  height: 60px;\n  border-bottom: 1px solid #ccc;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst RouteWrapper = styled.section`\n  min-height: calc(100vh - 60px);\n`;\n\nconst Footer = styled.footer`\n  font-size: 0.8rem;\n  padding: 1rem;\n  text-align: center;\n\n  p {\n    margin-bottom: 0.5rem;\n  }\n`;\n\nconst App = () => {\n  return (\n    <>\n      <Header>\n        <Link to=\"/\">\n          <Home fontSize=\"large\" color=\"primary\" />\n        </Link>\n      </Header>\n      <RouteWrapper>\n        <Switch>\n          <Route exact path=\"/\" component={List} />\n          <Route path=\"/axis\" component={Axis} />\n          <Route path=\"/bar-chart\" component={BarChart} />\n          <Route path=\"/bar-chart-sort\" component={BarChartSort} />\n          <Route path=\"/line-chart\" component={LineChart} />\n          <Route path=\"/csv-chart\" component={CSVChart} />\n          <Route path=\"/pie-chart\" component={PieChart} />\n          <Route path=\"/candlestick-chart\" component={CandleStickChart} />\n        </Switch>\n      </RouteWrapper>\n      <Footer>\n        <p>程式練習測試用，任何資料無任何商業行為</p>\n        <p>only from programming test, no commercial use</p>\n      </Footer>\n    </>\n  );\n};\n\nexport default App;\n","import { createGlobalStyle } from 'styled-components';\n\nconst style = createGlobalStyle`\nhtml,\nbody,\ndiv,\nspan,\napplet,\nobject,\niframe,\nh1,\nh2,\nh3,\nh4,\nh5,\nh6,\np,\nblockquote,\npre,\na,\nabbr,\nacronym,\naddress,\nbig,\ncite,\ncode,\ndel,\ndfn,\nem,\nimg,\nins,\nkbd,\nq,\ns,\nsamp,\nsmall,\nstrike,\nstrong,\nsub,\nsup,\ntt,\nvar,\nb,\nu,\ni,\ncenter,\ndl,\ndt,\ndd,\nol,\nul,\nli,\nfieldset,\nform,\nlabel,\nlegend,\ntable,\ncaption,\ntbody,\ntfoot,\nthead,\ntr,\nth,\ntd,\narticle,\naside,\ncanvas,\ndetails,\nembed,\nfigure,\nfigcaption,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\noutput,\nruby,\nsection,\nsummary,\ntime,\nmark,\naudio,\nvideo {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n\narticle,\naside,\ndetails,\nfigcaption,\nfigure,\nfooter,\nheader,\nhgroup,\nmenu,\nnav,\nsection {\n  display: block;\n}\n\nbody {\n  line-height: 1;\n}\n\nol,\nul {\n  list-style: none;\n}\n\nblockquote,\nq {\n  quotes: none;\n}\n\nblockquote:before,\nblockquote:after,\nq:before,\nq:after {\n  content: '';\n  content: none;\n}\n\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n\n// =========================================\n\nhtml,\nbody {\n  color: #3f3f3f;\n  font-family: 'Noto Sans TC';\n}\n\n#app {\n  overflow: hidden;\n}\n\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n}\n\nbutton{\n  font-family:  'Noto Sans TC';\n}\n\n`;\n\nexport default style;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\nimport GlobalStyle from './style/global';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <GlobalStyle />\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}